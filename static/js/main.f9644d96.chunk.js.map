{"version":3,"sources":["../../fcr/src/components/Input.js","../../fcr/src/components/OutputInfo.js","../../fcr/src/components/OutputGoals.js","../../fcr/src/components/Calculator.js","../../fcr/src/index.js"],"names":["Input","props","react_default","a","createElement","className","type","name","value","onChange","handleInputs","defaultValue","disabled","hidden","onClick","handleCalculator","OutputInfo","style","bmiStyle","bmi","bmiStatus","defaultGoal","bmr","calories","step","proteinsRatio","carbohydratesRatio","fatsRatio","handleCaloriesCalculator","OutputGoals","goalCalories","proteins","proteinsIndex","carbohydrates","carbohydratesIndex","fats","fatsIndex","Calculator","state","sex","height","weight","age","activity","goal","displayOutputInfo","displayOutputGoals","e","_this","setState","Object","defineProperty","target","activityValue","_this$state","sexValue","bmiValue","Math","round","pow","bmrValue","caloriesValue","alert","setDefaultGoal","x","defaultGoalValue","bmiStatusValue","color","goalCaloriesValue","_this$state2","fatsValue","proteinsValue","carbohydratesValue","proteinsIndexValue","carbohydratesIndexValue","fatsIndexValue","sum","Number","reduce","b","_this$state3","this","Fragment","components_Input","components_OutputInfo","components_OutputGoals","Component","ReactDOM","render","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.f9644d96.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Input = props => {\r\n  return (\r\n    <section>\r\n      <form className=\"form\">\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Sex:</label>\r\n          <div className=\"form__controls\">\r\n            <label className=\"form__radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sex\"\r\n                value=\"male\"\r\n                onChange={props.handleInputs}\r\n              />\r\n              Male\r\n            </label>\r\n            <label className=\"form__radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sex\"\r\n                value=\"female\"\r\n                onChange={props.handleInputs}\r\n              />\r\n              Female\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Height [cm]:</label>\r\n          <div className=\"form__controls\">\r\n            <input\r\n              className=\"form__input form__input--number\"\r\n              type=\"number\"\r\n              name=\"height\"\r\n              onChange={props.handleInputs}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Weight [kg]:</label>\r\n          <div className=\"form__controls\">\r\n            <input\r\n              className=\"form__input form__input--number\"\r\n              type=\"number\"\r\n              name=\"weight\"\r\n              onChange={props.handleInputs}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Age:</label>\r\n          <div className=\"form__controls\">\r\n            <input\r\n              className=\"form__input form__input--number\"\r\n              type=\"number\"\r\n              name=\"age\"\r\n              onChange={props.handleInputs}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Activity:</label>\r\n          <div className=\"form__controls\">\r\n            <select\r\n              className=\"form__input form__input--select\"\r\n              defaultValue=\"0\"\r\n              name=\"activity\"\r\n              onChange={props.handleInputs}\r\n            >\r\n              <option value=\"0\" disabled hidden>\r\n                Choose here\r\n              </option>\r\n              <option value=\"1\">Sedentary job and no excercise</option>\r\n              <option value=\"2\">\r\n                Sedentary job and excercise 2-4 times/week\r\n              </option>\r\n              <option value=\"3\">\r\n                Physical job and excercise 3-6 times/week\r\n              </option>\r\n              <option value=\"4\">\r\n                Very intense physical job and excercise 5-7 times/week\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"form__button\"\r\n          type=\"button\"\r\n          onClick={props.handleCalculator}\r\n        >\r\n          Calculate\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst OutputInfo = props => {\r\n  return (\r\n    <section>\r\n      <div className=\"text-container\">\r\n        <p>\r\n          Your BMI (Body Mass Index) is{\" \"}\r\n          <span style={props.bmiStyle}>{props.bmi}</span>. It means you are{\" \"}\r\n          <span style={props.bmiStyle}>{props.bmiStatus}</span>. You should{\" \"}\r\n          <span>{props.defaultGoal}</span> weight.\r\n        </p>\r\n        <p>\r\n          Your BMR (Basal Metabolic Rate) is <span>{props.bmr}</span> kcal.\r\n        </p>\r\n        <p>\r\n          Calories you should eat a day to maintain weight is{\" \"}\r\n          <span>{props.calories}</span> kcal.\r\n        </p>\r\n      </div>\r\n      <form className=\"form\">\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">Choose your goal:</label>\r\n          <div className=\"form__controls\">\r\n            <label className=\"form__radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"goal\"\r\n                value=\"lose\"\r\n                onChange={props.handleInputs}\r\n              />\r\n              Lose weight\r\n            </label>\r\n            <label className=\"form__radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"goal\"\r\n                value=\"maintain\"\r\n                onChange={props.handleInputs}\r\n              />\r\n              Maintain weight\r\n            </label>\r\n            <label className=\"form__radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"goal\"\r\n                value=\"gain\"\r\n                onChange={props.handleInputs}\r\n              />\r\n              Gain weight\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"form__group\">\r\n          <label className=\"form__title\">\r\n            Set your macronutricient ratio:\r\n            <br />\r\n            <p className=\"small\">\r\n              (The sum of all macronutricients must be equal 100%)\r\n            </p>\r\n          </label>\r\n          <div className=\"form__controls\">\r\n            <label className=\"form__input\">\r\n              <p>Proteins:</p>\r\n              <input\r\n                type=\"number\"\r\n                step=\"5\"\r\n                name=\"proteinsRatio\"\r\n                defaultValue={props.proteinsRatio}\r\n                onChange={props.handleInputs}\r\n              />\r\n            </label>\r\n            <label className=\"form__input\">\r\n              <p>Carbohydrates:</p>\r\n              <input\r\n                type=\"number\"\r\n                step=\"5\"\r\n                name=\"carbohydratesRatio\"\r\n                defaultValue={props.carbohydratesRatio}\r\n                onChange={props.handleInputs}\r\n              />\r\n            </label>\r\n            <label className=\"form__input\">\r\n              <p>Fats:</p>\r\n              <input\r\n                type=\"number\"\r\n                step=\"5\"\r\n                name=\"fatsRatio\"\r\n                defaultValue={props.fatsRatio}\r\n                onChange={props.handleInputs}\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"form__button\"\r\n          type=\"button\"\r\n          onClick={props.handleCaloriesCalculator}\r\n        >\r\n          Reach your goals!\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OutputInfo;\r\n","import React from \"react\";\r\n\r\nconst OutputGoals = props => {\r\n  return (\r\n    <section>\r\n      <div className=\"text-container\">\r\n        <p>\r\n          Calories you should eat a day to reach your goal is{\" \"}\r\n          <span>{props.goalCalories}</span> kcal.\r\n        </p>\r\n        <h2>Recommendend macronutricients:</h2>\r\n        <p>Proteins: {props.proteins} g</p>\r\n        <p className=\"small\">{props.proteinsIndex} g/kg body weight</p>\r\n        <p>Carbohydrates: {props.carbohydrates} g</p>\r\n        <p className=\"small\">{props.carbohydratesIndex} g/kg body weight</p>\r\n        <p>Fats: {props.fats} g</p>\r\n        <p className=\"small\">{props.fatsIndex} g/kg body weight</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OutputGoals;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./Input\";\r\nimport OutputInfo from \"./OutputInfo\";\r\nimport OutputGoals from \"./OutputGoals\";\r\n\r\nclass Calculator extends Component {\r\n  state = {\r\n    sex: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    age: \"\",\r\n    activity: \"\",\r\n    defaultGoal: \"\",\r\n    goal: \"\",\r\n    bmi: \"\",\r\n    bmiStatus: \"\",\r\n    bmiStyle: \"\",\r\n    bmr: \"\",\r\n    calories: \"\",\r\n    goalCalories: \"\",\r\n    proteins: \"\",\r\n    carbohydrates: \"\",\r\n    fats: \"\",\r\n    proteinsRatio: 30,\r\n    carbohydratesRatio: 45,\r\n    fatsRatio: 25,\r\n    proteinsIndex: \"\",\r\n    carbohydratesIndex: \"\",\r\n    fatsIndex: \"\",\r\n    displayOutputInfo: false,\r\n    displayOutputGoals: false\r\n  };\r\n\r\n  handleInputs = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n  handleCalculator = () => {\r\n    const { sex, weight, height, age, activity } = this.state;\r\n    const sexValue = sex === \"male\" ? 5 : -161;\r\n    const bmiValue = Math.round((weight / Math.pow(height / 100, 2)) * 10) / 10;\r\n    const bmrValue = Math.round(\r\n      10 * weight + 6.25 * height - 5 * age + sexValue\r\n    );\r\n    let activityValue;\r\n    if (activity === \"1\") {\r\n      activityValue = 1.2;\r\n    } else if (activity === \"2\") {\r\n      activityValue = 1.375;\r\n    } else if (activity === \"3\") {\r\n      activityValue = 1.55;\r\n    } else if (activity === \"4\") {\r\n      activityValue = 1.725;\r\n    }\r\n    const caloriesValue = Math.round(bmrValue * activityValue);\r\n\r\n    if (\r\n      (sex === \"male\" || sex === \"female\") &&\r\n      height > 0 &&\r\n      weight > 0 &&\r\n      age > 0 &&\r\n      activity > 0\r\n    ) {\r\n      this.setState({\r\n        bmi: bmiValue,\r\n        bmr: bmrValue,\r\n        calories: caloriesValue,\r\n        displayOutputInfo: true,\r\n        displayOutputGoals: false\r\n      });\r\n    } else if (sex === \"\") {\r\n      alert(\"Chose your sex\");\r\n    } else if (weight <= 0) {\r\n      alert(\"Weight can not be less than 0\");\r\n    } else if (height <= 0) {\r\n      alert(\"Height can not be less than 0\");\r\n    } else if (age <= 0) {\r\n      alert(\"Age can not be less than 0\");\r\n    } else if (activity === \"\") {\r\n      alert(\"Chose your activity\");\r\n    }\r\n    this.setDefaultGoal(bmiValue);\r\n  };\r\n\r\n  setDefaultGoal = x => {\r\n    let defaultGoalValue = \"\";\r\n    let bmiStatusValue = \"\";\r\n    let style = \"\";\r\n    const greenStyle = {\r\n      color: \"#009432\"\r\n    };\r\n    const redStyle = {\r\n      color: \"#EA2027\"\r\n    };\r\n    const yellowStyle = {\r\n      color: \"#FFC312\"\r\n    };\r\n    const overweightBMI = 25;\r\n    const underweightBMI = 18;\r\n    if (x >= overweightBMI) {\r\n      defaultGoalValue = \"lose\";\r\n      bmiStatusValue = \"overweight\";\r\n      style = redStyle;\r\n    } else if (x < overweightBMI && x >= underweightBMI) {\r\n      defaultGoalValue = \"maintain\";\r\n      bmiStatusValue = \"normal (healthy weight)\";\r\n      style = greenStyle;\r\n    } else if (x < underweightBMI) {\r\n      defaultGoalValue = \"gain\";\r\n      bmiStatusValue = \"underweight\";\r\n      style = yellowStyle;\r\n    }\r\n    this.setState({\r\n      defaultGoal: defaultGoalValue,\r\n      bmiStatus: bmiStatusValue,\r\n      bmiStyle: style\r\n    });\r\n  };\r\n\r\n  handleCaloriesCalculator = () => {\r\n    const {\r\n      calories,\r\n      goal,\r\n      weight,\r\n      proteinsRatio,\r\n      carbohydratesRatio,\r\n      fatsRatio\r\n    } = this.state;\r\n\r\n    let goalCaloriesValue;\r\n    const extraCalories = 500;\r\n    if (goal === \"lose\") {\r\n      goalCaloriesValue = calories - extraCalories;\r\n    } else if (goal === \"maintain\") {\r\n      goalCaloriesValue = calories;\r\n    } else if (goal === \"gain\") {\r\n      goalCaloriesValue = calories + extraCalories;\r\n    }\r\n    const fatCalorie = 9;\r\n    const proteinCalorie = 4;\r\n    const carboCalorie = 4;\r\n\r\n    let fatsValue = Math.round(((fatsRatio / 100) * goalCaloriesValue) / fatCalorie);\r\n    let proteinsValue = Math.round(\r\n      ((proteinsRatio / 100) * goalCaloriesValue) / proteinCalorie\r\n    );\r\n    let carbohydratesValue = Math.round(\r\n      ((carbohydratesRatio / 100) * goalCaloriesValue) / carboCalorie\r\n    );\r\n\r\n    let proteinsIndexValue = Math.round((proteinsValue / weight) * 10) / 10;\r\n    let carbohydratesIndexValue =\r\n      Math.round((carbohydratesValue / weight) * 10) / 10;\r\n    let fatsIndexValue = Math.round((fatsValue / weight) * 10) / 10;\r\n    let macronutricients = [\r\n      Number(proteinsRatio),\r\n      Number(carbohydratesRatio),\r\n      Number(fatsRatio)\r\n    ];\r\n    let sum = macronutricients.reduce((a, b) => a + b);\r\n\r\n    this.setState({\r\n      displayOutputGoals: false\r\n    });\r\n\r\n\r\n    if (\r\n      sum === 100 &&\r\n      (goal === \"lose\" || goal === \"maintain\" || goal === \"gain\")\r\n    ) {\r\n      this.setState({\r\n        goalCalories: goalCaloriesValue,\r\n        proteins: proteinsValue,\r\n        carbohydrates: carbohydratesValue,\r\n        fats: fatsValue,\r\n        proteinsIndex: proteinsIndexValue,\r\n        carbohydratesIndex: carbohydratesIndexValue,\r\n        fatsIndex: fatsIndexValue,\r\n        displayOutputGoals: true\r\n      });\r\n    } else if (\r\n      sum !== 100 &&\r\n      (goal === \"lose\" || goal === \"maintain\" || goal === \"gain\")\r\n    ) {\r\n      alert(\"The sum of all macronutricients must be equal 100%.\");\r\n    } else if (\r\n      sum === 100 &&\r\n      (goal !== \"lose\" || goal !== \"maintain\" || goal !== \"gain\")\r\n    ) {\r\n      alert(\"Chose your goal to calculate.\");\r\n    } else {\r\n      alert(\r\n        \"The sum of all macronutricients must be equal 100%. Chose your goal to calculate.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      sex,\r\n      height,\r\n      weight,\r\n      age,\r\n      activity,\r\n      defaultGoal,\r\n      bmi,\r\n      bmiStatus,\r\n      bmiStyle,\r\n      bmr,\r\n      calories,\r\n      goalCalories,\r\n      proteins,\r\n      carbohydrates,\r\n      fats,\r\n      proteinsRatio,\r\n      carbohydratesRatio,\r\n      fatsRatio,\r\n      proteinsIndex,\r\n      carbohydratesIndex,\r\n      fatsIndex,\r\n      displayOutputInfo,\r\n      displayOutputGoals\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <header>\r\n          <h1>Fit Calculator</h1>\r\n        </header>\r\n        <main>\r\n          <Input\r\n            sex={sex}\r\n            height={height}\r\n            weight={weight}\r\n            age={age}\r\n            activity={activity}\r\n            handleInputs={this.handleInputs}\r\n            handleCalculator={this.handleCalculator}\r\n          />\r\n          {displayOutputInfo ? (\r\n            <OutputInfo\r\n              defaultGoal={defaultGoal}\r\n              bmi={bmi}\r\n              bmiStatus={bmiStatus}\r\n              bmiStyle={bmiStyle}\r\n              bmr={bmr}\r\n              calories={calories}\r\n              proteinsRatio={proteinsRatio}\r\n              carbohydratesRatio={carbohydratesRatio}\r\n              fatsRatio={fatsRatio}\r\n              handleInputs={this.handleInputs}\r\n              handleCaloriesCalculator={this.handleCaloriesCalculator}\r\n            />\r\n          ) : null}\r\n          {displayOutputGoals ? (\r\n            <OutputGoals\r\n              goalCalories={goalCalories}\r\n              proteins={proteins}\r\n              carbohydrates={carbohydrates}\r\n              fats={fats}\r\n              proteinsIndex={proteinsIndex}\r\n              carbohydratesIndex={carbohydratesIndex}\r\n              fatsIndex={fatsIndex}\r\n            />\r\n          ) : null}\r\n        </main>\r\n        <footer>\r\n          <p>\r\n            All calculations are based on Mifflin-St Jeor formula. The\r\n            calcualtions are only an estimation. If you have any health problems\r\n            (e.g. diabeters, hypertension) or if you are pregnant, you should\r\n            contact your doctor or dietician.\r\n          </p>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Calculator from \"./components/Calculator\";\r\nimport \"./components/css/reset.css\";\r\nimport \"./components/css/style.css\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}